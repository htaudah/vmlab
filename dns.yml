# Playbook to configure the DNS Server with all needed DNS records. DNS records that correspond to
# domain-joined Windows hosts need not be created here, since they are automatically created by
# Active Directory when the hosts are joined.
# Written by: Hani Audah <ht.aramco@gmail.com>
# Created on: Jun/16/2020
# -------------------------------------------------------------------------------------------------
- import_playbook: allocate_host_variables.yml

- hosts: "{{ groups['domain_controllers'] | random }}"
  name: Configure private DNS records
  vars_files:
    - "{{ playbook_dir }}/vault.yml"
    - "{{ playbook_dir }}/strings.yml"
    - "{{ playbook_dir }}/customizations.yml"
  vars:
    ansible_connection: winrm
    ansible_user: Administrator
    ansible_password: "{{ win_local_password }}"
    ansible_winrm_transport: ntlm
    ansible_port: 5985
  tasks:
    - win_dns_record:
        name: "uemc"
        type: "A"
        value: "{{ network_subnet }}.{{ virtual_ips['uem_console'] }}"
        zone: "{{ domain_name }}"
    - win_dns_record:
        name: "uds"
        type: "A"
        value: "{{ network_subnet }}.{{ virtual_ips['uem_console'] }}"
        zone: "{{ domain_name }}"
    - win_dns_record:
        name: "lb01"
        type: "A"
        value: "{{ network_subnet }}.{{ hostvars['lb01']['host_address'] }}"
        zone: "{{ domain_name }}"
    - win_dns_record:
        name: "lb02"
        type: "A"
        value: "{{ network_subnet }}.{{ hostvars['lb02']['host_address'] }}"
        zone: "{{ domain_name }}"
    - win_dns_record:
        name: "vcenter"
        type: "A"
        value: "{{ network_subnet }}.{{ hostvars['vcenter']['host_address'] }}"
        zone: "{{ domain_name }}"
    #- name: Exchange internal FQDN
      #win_dns_record:
        #name: "mail"
        #type: "A"
        ## TODO: for now just point to our only load balancer; revise later
        #value: "{{ network_subnet }}.{{ hostvars['"
    #- win_dns_record:
        #name: "pki"
        #type: "A"
        #value: "{{ network_subnet }}.60"
        #zone: "{{ domain_name }}"

    #- name: Exchange MX record
      #win_dns_record:
        #name: 

# Use the certbot since it already has the aws credentials
- hosts: certbot
  name: Create public DNS records
  vars_files:
    - "{{ playbook_dir }}/vault.yml"
    - "{{ playbook_dir }}/strings.yml"
    - "{{ playbook_dir }}/customizations.yml"
  vars:
    ansible_user: root
    ansible_password: "{{ linux_local_password }}"
  tasks:
    - name: Ensure AWS config directory exists
      file:
        path: /root/.aws
        state: directory

    - name: Transfer AWS access config
      template:
        src: configurations/aws_config
        dest: /root/.aws/config

    - name: UAGR
      community.aws.route53:
        state: present
        zone: "{{ domain_name }}"
        record: uagr.{{ domain_name }}
        type: A
        value: "{{ public_ip_uagr }}"

    - name: UEM Device Services
      community.aws.route53:
        state: present
        zone: "{{ domain_name }}"
        record: uds.{{ domain_name }}
        type: A
        value: "{{ public_ip_uem }}"

    - name: Email Notification Service
      community.aws.route53:
        state: present
        zone: "{{ domain_name }}"
        record: ens.{{ domain_name }}
        type: A
        value: "{{ public_ip_uem }}"

    - name: Secure Email Gateway
      community.aws.route53:
        state: present
        zone: "{{ domain_name }}"
        record: seg.{{ domain_name }}
        type: A
        value: "{{ public_ip_uem }}"
