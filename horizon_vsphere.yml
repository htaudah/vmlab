# Playbook to deploy all ESXi appliances
# Written by: Hani Audah <ht.aramco@gmail.com>
# Created on: May/14/2021
# -------------------------------------------------------------------------------------------------
- import_playbook: allocate_host_variables.yml

- hosts: nested_esxi
  connection: local
  name: Create Infrastructure Servers
  vars_files:
    - "{{ playbook_dir }}/vault.yml"
    - "{{ playbook_dir }}/strings.yml"
    - "{{ playbook_dir }}/customizations.yml"
  tasks:
    - name: Create directory for OVA files
      file:
        path: /var/ova
        state: directory
      delegate_to: localhost
          
    - name: Download ESXi appliance OVA file
      get_url:
        url: 'https://download3.vmware.com/software/vmw-tools/nested-esxi/Nested_ESXi7.0u2_Appliance_Template_v1.ova'
        dest: /var/ova/esxi-7.0u2.ova
      delegate_to: localhost

    - name: Download vCenter appliance OVA file
      get_url:
        url: 'https://d1drul0h659ga0.cloudfront.net/vcenter-7u2.ova'
        dest: /var/ova/vcenter-7u2.ova
      delegate_to: localhost

    - name: Create ESXi machines
      community.vmware.vmware_deploy_ovf:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter: "{{ datacenter_name }}"
        resource_pool: "{{ resource_pool }}"
        folder: "/{{ datacenter_name }}/vm/{{ workload_folder }}"
        name: "{{ userid }}-{{ inventory_hostname }}"
        ovf: /var/ova/esxi-7.0u2.ova
        datastore: "{{ workload_datastore }}"
        networks: "{'VM Network':'{{ network_name }}'}"
        validate_certs: no
        power_on: no
        allow_duplicates: no
        properties:
          guestinfo.password: "{{ linux_local_password }}"
          guestinfo.gateway: "{{ network_gateway }}"
          guestinfo.dns: "{{ groups['domain_controllers'] | map('extract', hostvars, 'host_address') | map('regex_replace', '(\\d+)', network_subnet + '.\\1') | first }}"
          guestinfo.domain: "{{ domain_name }}"
          guestinfo.ipaddress: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
          guestinfo.netmask: "{{ network_mask }}"
          guestinfo.hostname: "{{ userid }}-{{ inventory_hostname }}"
      delegate_to: localhost

    - name: Reconfigure ESXi machines (CPU and Memory)
      community.vmware.vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter: "{{ datacenter_name }}"
        name: "{{ userid }}-{{ inventory_hostname }}"
        state: present
        hardware:
          memory_mb: 24576
          num_cpus: 4
      delegate_to: localhost

    - name: Power on ESXi machines
      community.vmware.vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter: "{{ datacenter_name }}"
        name: "{{ userid }}-{{ inventory_hostname }}"
        state: poweredon
        wait_for_ip_address: yes
      delegate_to: localhost

- hosts: localhost
  connection: local
  name: Create Infrastructure Servers
  vars_files:
    - "{{ playbook_dir }}/vault.yml"
    - "{{ playbook_dir }}/strings.yml"
    - "{{ playbook_dir }}/customizations.yml"
  tasks:
    - name: Deploy vCenter appliance
      community.vmware.vmware_deploy_ovf:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter: "{{ datacenter_name }}"
        resource_pool: "{{ resource_pool }}"
        folder: "/{{ datacenter_name }}/vm/{{ workload_folder }}"
        name: "{{ userid }}-vcenter"
        ovf: /var/ova/vcenter-7u2.ova
        datastore: "{{ workload_datastore }}"
        networks: "{'Network 1':'{{ network_name }}'}"
        validate_certs: no
        power_on: yes
        # needed to force the non-user configurable properties (settingsJSON)
        enable_hidden_properties: yes
        inject_ovf_env: yes
        allow_duplicates: no
        wait_for_ip_address: yes
        deployment_option: tiny
        properties:
          guestinfo.cis.deployment.autoconfig: "True"
          guestinfo.cis.deployment.node.type: embedded
          guestinfo.cis.appliance.net.addr: "{{ hostvars['vcenter']['ansible_host'] }}"
          guestinfo.cis.ceip_enabled: "False"
          guestinfo.cis.appliance.net.addr.family: ipv4
          guestinfo.cis.appliance.net.gateway: "{{ network_gateway }}"
          guestinfo.cis.system.vm0.port: "443"
          guestinfo.cis.appliance.net.pnid: vcenter.{{ domain_name }}
          guestinfo.cis.appliance.net.prefix: "24"
          guestinfo.cis.vmdir.domain-name: vsphere.local
          guestinfo.cis.vmdir.first-instance: "True"
          guestinfo.cis.appliance.net.dns.servers: "172.28.10.50,172.28.10.51"
          guestinfo.cis.vmdir.password: "{{ nested_vcenter_password }}"
          guestinfo.cis.appliance.root.passwd: "{{ linux_local_password }}"
          guestinfo.cis.appliance.net.mode: static
          guestinfo.cis.appliance.ntp.servers: "pool.ntp.org"
          guestinfo.cis.appliance.ssh.enabled: "True"

    - name: Authenticate to vCenter API
      uri:
        url: https://{{ hostvars['vcenter']['ansible_host'] }}/api/session
        user: administrator@vsphere.local
        password: "{{ nested_vcenter_password }}"
        method: POST
        validate_certs: no
        status_code: 201
      register: auth_response
      until: auth_response.status == 201
      retries: 30
      delay: 20

    - name: Monitor vCenter deployment
      uri:
        url: https://{{ hostvars['vcenter']['ansible_host'] }}/rest/vcenter/deployment
        validate_certs: no
        headers:
          vmware-api-session-id: "{{ auth_response.json }}"
      register: monitor_response
      until: '"status" in monitor_response.json.value and monitor_response.json.value.status == "SUCCEEDED"'
      retries: 45
      delay: 20

    - name: Create datacenter
      community.vmware.vmware_datacenter:
        hostname: "{{ hostvars['vcenter']['ansible_host'] }}"
        username: administrator@vsphere.local
        password: "{{ nested_vcenter_password }}"
        datacenter_name: "{{ nested_datacenter_name }}"
        validate_certs: no
        state: present

    - name: Create cluster
      community.vmware.vmware_cluster:
        hostname: "{{ hostvars['vcenter']['ansible_host'] }}"
        username: administrator@vsphere.local
        password: "{{ nested_vcenter_password }}"
        datacenter_name: "{{ nested_datacenter_name }}"
        cluster_name: "{{ nested_cluster_name }}"
        enable_drs: yes
        validate_certs: no
        state: present

    - name: Add nested ESXi hosts to datacenter
      community.vmware.vmware_host:
        hostname: "{{ hostvars['vcenter']['ansible_host'] }}"
        username: administrator@vsphere.local
        password: "{{ nested_vcenter_password }}"
        datacenter: "{{ nested_datacenter_name }}"
        cluster: "{{ nested_cluster_name }}"
        state: present
        esxi_hostname: "{{ hostvars[item]['ansible_host'] }}"
        esxi_username: root
        esxi_password: "{{ linux_local_password }}"
        validate_certs: no
      loop: "{{ groups['nested_esxi'] }}"

    - name: Create nested DV switch
      community.vmware.vmware_dvswitch:
        hostname: "{{ hostvars['vcenter']['ansible_host'] }}"
        username: administrator@vsphere.local
        password: "{{ nested_vcenter_password }}"
        datacenter: "{{ nested_datacenter_name }}"
        switch_name: "{{ nested_switch_name }}"
        version: 7.0.0
        validate_certs: no
        mtu: 1600
        uplink_quantity: 1
        state: present

    - name: Create nested VD portgroup
      community.vmware.vmware_dvs_portgroup:
        hostname: "{{ hostvars['vcenter']['ansible_host'] }}"
        username: administrator@vsphere.local
        password: "{{ nested_vcenter_password }}"
        num_ports: 128
        portgroup_name: "{{ nested_portgroup_name }}"
        switch_name: "{{ nested_switch_name }}"
        validate_certs: no
        vlan_id: 0
        portgroup_type: earlyBinding
        state: present

    - name: Add hosts to DV switch
      community.vmware.vmware_dvs_host:
        hostname: "{{ hostvars['vcenter']['ansible_host'] }}"
        username: administrator@vsphere.local
        password: "{{ nested_vcenter_password }}"
        esxi_hostname: "{{ hostvars[item]['ansible_host'] }}"
        switch_name: "{{ nested_switch_name }}"
        vmnics:
          - vmnic1
        validate_certs: no
      loop: "{{ groups['nested_esxi'] }}"

    #- name: Enable vMotion for VMKernel adapters
      #community.vmware.vmware_vmkernel:
        #hostname: "{{ hostvars['vcenter']['ansible_host'] }}"
        #username: administrator@vsphere.local
        #password: "{{ nested_vcenter_password }}"
        #switch: "{{ nested_switch_name }}"
        #portgroup: "{{ nested_portgroup_name }}"
