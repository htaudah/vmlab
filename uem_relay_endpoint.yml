# Playbook to deploy all Tunnel UAG appliances
# Written by: Hani Audah <ht.aramco@gmail.com>
# Created on: May/10/2021
# -------------------------------------------------------------------------------------------------
- import_playbook: allocate_host_variables.yml

- hosts: "{{ groups['databases'] | first }}"
  name: Get REST API key
  vars_files:
    - "{{ playbook_dir }}/vault.yml"
    - "{{ playbook_dir }}/strings.yml"
    - "{{ playbook_dir }}/customizations.yml"
  vars:
    ansible_connection: winrm
    ansible_user: Administrator@{{ domain_name }}
    ansible_password: "{{ domain_admin_password }}"
    ansible_winrm_transport: credssp
    ansible_port: 5985
  tasks:
    - name: Get admin REST API key
      win_shell: >
        Invoke-Sqlcmd -Query "SELECT APIKey FROM dbo.APIKey WHERE ServiceName = 'AirWatchAPI'" -ServerInstance MainAG
        -Database uemdb -OutputSqlErrors 1 -AbortOnError -querytimeout 300 | ConvertTo-Json
      register: apikey
      no_log: yes

    - set_fact:
        uem_api_key: "{{ (apikey.stdout | from_json).APIKey }}"

- hosts: uem_tunnel_relay:uem_tunnel_endpoint
  connection: local
  name: Create Infrastructure Servers
  vars_files:
    - "{{ playbook_dir }}/vault.yml"
    - "{{ playbook_dir }}/strings.yml"
    - "{{ playbook_dir }}/customizations.yml"
  tasks:
    - set_fact:
        uem_api_key: "{{ hostvars[groups['databases'] | first]['uem_api_key'] }}"

    - name: Create directory for OVA files
      file:
        path: /var/ova
        state: directory

    - name: Download UAG appliance OVA file
      get_url:
        url: 'https://d1drul0h659ga0.cloudfront.net/euc-uag-2103.ova'
        dest: /var/ova/euc-uag-2103.ova

    - name: Get customer Organization Group UUID
      uri:
        url: https://uds.{{ domain_name }}/api/system/groups/570
        user: administrator
        password: "{{ uem_api_password }}"
        force_basic_auth: yes
        method: GET
        validate_certs: no
        headers:
          aw-tenant-code: "{{ uem_api_key }}"
          Accept: application/json
      register: org_id_response

    - name: Get existing Content Gateway configuration
      uri:
        url: https://uds.{{ domain_name }}/api/mcm/V3/groups/content-gateway/organization-group/{{ org_id_response.json.Uuid }}
        user: administrator
        password: "{{ uem_api_password }}"
        force_basic_auth: yes
        method: GET
        validate_certs: no
        headers:
          aw-tenant-code: "{{ uem_api_key }}"
          Accept: application/json
        status_code: 200
      register: cg_config_response
      delegate_to: localhost

    - name: Deploy OVA appliances
      community.vmware.vmware_deploy_ovf:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter: "{{ datacenter_name }}"
        resource_pool: "{{ resource_pool }}"
        folder: "/{{ datacenter_name }}/vm/{{ workload_folder }}"
        name: "{{ userid }}-{{ inventory_hostname }}"
        ovf: /var/ova/euc-uag-2103.ova
        datastore: "{{ workload_datastore }}"
        networks: "{'Internet':'{{ network_name }}', 'ManagementNetwork':'{{ network_name }}', 'BackendNetwork':'{{ network_name }}'}"
        allow_duplicates: no
        validate_certs: no
        power_on: yes
        # needed to force the non-user configurable properties (settingsJSON)
        enable_hidden_properties: yes
        inject_ovf_env: yes
        properties:
          settingsJSON: '{\"kerberosKeyTabSettingsList\":{ \"kerberosKeyTabSettings\": []}, \"kerberosRealmSettingsList\":{ \"kerberosRealmSettingsList\": []}, \"idPExternalMetadataSettingsList\":{ \"idPExternalMetadataSettingsList\": []}, \"customExecutableList\": { \"customExecutableList\": [ ]}, \"edgeServiceSettingsList\":{ \"edgeServiceSettingsList\": [{ \"identifier\": \"TUNNEL_GATEWAY\",\"airwatchComponentsInstalled\":\"TUNNEL\",\"enabled\": true,\"proxyDestinationUrl\": \"https://null\",\"apiServerUrl\": \"https://uds.{{ domain_name }}\",\"apiServerUsername\": \"administrator\",\"apiServerPassword\": \"{{ uem_api_password }}\",\"organizationGroupCode\": \"{{ orgname }}\",\"airwatchServerHostname\": \"{{ hostvars[inventory_hostname] }}.{{ domain_name }}\",\"airwatchAgentStartUpMode\": \"install\"}, { \"identifier\": \"CONTENT_GATEWAY\",\"airwatchComponentsInstalled\":\"CG\",\"enabled\": true,\"proxyDestinationUrl\": \"https://null\",\"apiServerUrl\": \"https://uds.haramco.org\",\"apiServerUsername\": \"administrator\",\"apiServerPassword\": \"Baltona31@\",\"organizationGroupCode\": \"Haramco\",\"airwatchServerHostname\": \"{{ hostvars[inventory_hostname] }}\",\"airwatchAgentStartUpMode\": \"install\",\"cgConfigurationId\": \"{{ cg_config_id }}\"}] }, \"systemSettings\":{\"locale\": \"en_US\",\"ssl30Enabled\": \"false\",\"tls10Enabled\": \"false\",\"tls11Enabled\": \"false\",\"tls12Enabled\": \"true\",\"tls13Enabled\": \"true\"}, \"authMethodSettingsList\":{ \"authMethodSettingsList\": [] }, \"serviceProviderMetadataList\": { \"items\": [ ] }, \"identityProviderMetaData\": {  } }'
          rootPassword: "{{ linux_local_password }}"
          adminPassword: "{{ linux_local_password }}"
          ceipEnabled: "False"
          defaultGateway: "{{ network_gateway }}"
          DNS: "{{ groups['domain_controllers'] | map('extract', hostvars, 'host_address') | map('regex_replace', '(\\d+)', network_subnet + '.\\1') | join(' ') }}"
          dnsSearch: "{{ domain_name }}"
          ip0: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
          ipMode0: STATICV4
          netmask0: "{{ network_mask }}"
          uagname: "{{ userid }}-{{ inventory_hostname }}"
      delegate_to: localhost
