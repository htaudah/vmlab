# Playbook to configure all Active Directory domain controllers. Tasks must be run serially
# (serial=1) to allow the second domain controller to join the domain established by the first.
# Written by: Hani Audah <ht.aramco@gmail.com>
# Created on: May/26/2020
# -------------------------------------------------------------------------------------------------
- import_playbook: allocate_host_variables.yml

- hosts: domain_controllers
  name: Configure Domain Controller Servers
  serial: 1
  vars_files:
    - "{{ playbook_dir }}/vault.yml"
    - "{{ playbook_dir }}/strings.yml"
    - "{{ playbook_dir }}/customizations.yml"
  vars:
    ansible_connection: winrm
    ansible_user: Administrator
    ansible_password: "{{ win_local_password }}"
    ansible_winrm_transport: ntlm
    ansible_port: 5985
  tasks:
    - name: Set DNS addresses to all other domain controller IPs
      win_dns_client:
        adapter_names: '*'
        ipv4_addresses: "{{ (groups['domain_controllers'] \
                        | map('extract', hostvars, 'host_address') \
                        | reject('eq', hostvars[inventory_hostname]['host_address']) \
                        | map('regex_replace', '(.*)', network_subnet + '.\\1') \
                        | list) + [fallback_dns_server] }}"
    
    # This comment fixes syntax highlighting on VIM"

    - name: Install first domain controller if domain does not exist
      ansible.windows.win_domain:
        create_dns_delegation: no
        dns_domain_name: "{{ domain_name }}"
        safe_mode_password: "{{ domain_recovery_password }}"
      register: create_domain

    - name: Reboot new domain controller
      win_reboot:
      when: create_domain.reboot_required

    - name: Install domain controller in an existing domain
      ansible.windows.win_domain_controller:
        dns_domain_name: "{{ domain_name }}"
        domain_admin_user: "{{ domain_admin_user }}@{{ domain_name }}"
        domain_admin_password: "{{ domain_admin_password }}"
        safe_mode_password: "{{ domain_recovery_password }}"
        state: domain_controller
      register: join_domain

    - name: Reboot new domain controller (existing domain)
      win_reboot:
      when: join_domain.reboot_required

    - name: Install DSC module for Active Directory
      win_psmodule:
        name: ActiveDirectoryDsc
        state: present

    - name: Wait for DC initialization
      win_shell: |
        do {
          Start-Sleep -Seconds 5
          Get-ADComputer $env:COMPUTERNAME | Out-Null
        } until ($?)
