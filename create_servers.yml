# Playbook to deploy all inventory servers, leaving any configuration to the corresponding
# server-specific playbook. For now, all servers of a particular OS will have the same hardware
# specs. TODO: add server-specific specs to the inventory variables.
# Written by: Hani Audah <ht.aramco@gmail.com>
# Created on: May/25/2020
# -------------------------------------------------------------------------------------------------
- import_playbook: allocate_host_variables.yml

- hosts: all
  connection: local
  name: Create Infrastructure Servers
  vars_files:
    - "{{ playbook_dir }}/vault.yml"
    - "{{ playbook_dir }}/strings.yml"
    - "{{ playbook_dir }}/customizations.yml"
  tasks:
    - name: Create Windows virtual machines
      community.aws.ec2_instance:
        key_name: ws1-lab
        instance_type: t3.xlarge
        image: "{{ windows_ami }}"
        wait: yes
        name: "{{ userid }}-{{ inventory_hostname }}"
        volumes:
          - device_name: /dev/sda1
            volume_size: 100
            volume_type: gp3
            delete_on_termination: yes
        region: "{{ aws_region }}"
      register: create_windows_server
      when: "'windows' in group_names"
      delegate_to: localhost

    - name: Create Linux virtual machines
      vars:
        computer_name: "{{ inventory_hostname }}"
      community.aws.ec2_instance:
        key_name: ws1-lab
        instance_type: t3.large
        image: "{{ linux_ami }}"
        wait: yes
        name: "{{ userid }}-{{ inventory_hostname }}"
        volumes:
          - device_name: /dev/sda1
            volume_size: 100
            volume_type: gp3
            delete_on_termination: yes
        region: "{{ aws_region }}"
      register: create_linux_server
      when: "'linux' in group_names"
      delegate_to: localhost

    #- name: Mount iso files where needed
      #community.vmware.vmware_guest:
        #hostname: "{{ vcenter_hostname }}"
        #username: "{{ vcenter_username }}"
        #password: "{{ vcenter_password }}"
        #name: "{{ userid }}-{{ inventory_hostname }}"
        #state: present
        #cdrom:
          #- controller_type: sata
            #controller_number: 0
            #unit_number: 0
            #type: iso
            #iso_path: "{{ iso_paths[hostvars[inventory_hostname]['mount_iso']] }}"
      #when: "{{ hostvars[inventory_hostname]['mount_iso'] is defined }}"
      #delegate_to: localhost
