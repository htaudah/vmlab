# Playbook to configure all UEM Device Services servers
# Written by: Hani Audah <ht.aramco@gmail.com>
# Created on: Apr/26/2021
# -------------------------------------------------------------------------------------------------
- import_playbook: allocate_host_variables.yml

- hosts: uem_ds_servers
  name: Join UEM Device Services servers to the domain
  vars_files:
    - "{{ playbook_dir }}/vault.yml"
    - "{{ playbook_dir }}/strings.yml"
    - "{{ playbook_dir }}/customizations.yml"
  vars:
    ansible_connection: winrm
    ansible_user: Administrator
    ansible_password: "{{ win_local_password }}"
    ansible_winrm_transport: ntlm
    ansible_port: 5985
  tasks:
    - include_tasks: join_domain.yml
      vars:
        machine_ou: "{{ server_ou }}"

- hosts: uem_ds_servers
  name: Deploy UEM Device Services servers
  vars_files:
    - "{{ playbook_dir }}/vault.yml"
    - "{{ playbook_dir }}/strings.yml"
    - "{{ playbook_dir }}/customizations.yml"
  vars:
    ansible_connection: winrm
    ansible_user: Administrator@{{ domain_name }}
    ansible_password: "{{ domain_admin_password }}"
    ansible_winrm_transport: credssp
    ansible_port: 5985
  tasks:
    - name: Create folder for prerequisite installers
      win_file:
        path: C:\Installers
        state: directory

    - name: Create folder for installer logs
      win_file:
        path: C:\InstallerLogs
        state: directory

    - name: Copy installers
      win_copy:
        src: \\{{ domain_name }}\Shares\domain\UEM\{{ item }}
        dest: C:\Installers\{{ item }}
        remote_src: yes
      loop:
        - ndp48-x86-x64-allos-enu.exe
        - sqlncli.msi
        - vcredist_x64.exe
        - rewrite_amd64.msi
        - dotnet-hosting-3.1.8-win.exe
        - "{{ uem_installer_name }}.zip"
        - jre-8u221-windows-x64.exe

    - name: Install Java JRE
      win_package:
        path: C:\Installers\jre-8u221-windows-x64.exe
        arguments: /s
        product_id: '{26A24AE4-039D-4CA4-87B4-2F64180221F0}'

    - name: Get current .NET version
      win_reg_stat:
        path: HKLM:\SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full
        name: Release
      register: dotnetversion

    - name: Install .NET Framework 4.8
      win_package:
        path: C:\Installers\ndp48-x86-x64-allos-enu.exe
        arguments: /q /norestart
        product_id: none
      register: dotnetinstall
      when: dotnetversion.value != 528049

    - name: Reboot after .NET install
      win_reboot:
      when: dotnetversion.value != 528049

    - name: Install BranchCache feature
      win_feature:
        name: BranchCache
        state: present
      register: branch_feature

    - name: Install Visual C++ Redistributable
      win_package:
        path: C:\Installers\vcredist_x64.exe
        arguments: /q
        product_id: '{050d4fc8-5d48-4b8f-8972-47c82c46020f}'

    - name: Install .NET Core 3.1.8 Hosting Bundle
      win_package:
        path: C:\Installers\dotnet-hosting-3.1.8-win.exe
        arguments: /q /norestart
        product_id: '{7186a742-a2d9-4dab-80df-80aa5e8013e3}'

    - name: Install SQL Native Client 2012
      win_package:
        path: C:\Installers\sqlncli.msi
        arguments: IACCEPTSQLNCLILICENSETERMS=YES
        product_id: '{B9274744-8BAE-4874-8E59-2610919CD419}'

    - name: Install URL Rewrite 2.1
      win_package:
        path: C:\Installers\rewrite_amd64.msi
        product_id: '{38D32370-3A31-40E9-91D0-D236F47E3C4A}'
        arguments: /quiet /norestart
        state: present

    - name: Extract UEM installer
      community.windows.win_unzip:
        src: C:\Installers\{{ uem_installer_name }}.zip
        dest: C:\Installers
        creates: C:\Installers\{{ uem_installer_name }}

    - name: Copy Device Services configuration
      win_template:
        src: configurations/uem/DS_ConfigScript.xml
        dest: C:\DS_ConfigScript.xml

    - name: Install UEM Device Services
      win_package:
        path: C:\Installers\{{ uem_installer_name }}\Application\{{ uem_app_installer_name }}
        product_id: '{2D579F60-1CAF-49A3-9986-BBE1C9A38065}'
        arguments: '/s /V"/qn /lie C:\InstallerLogs\DSInstall.log TARGETDIR=C:\AirWatch INSTALLDIR=C:\AirWatch AWSETUPCONFIGFILE=C:\DS_ConfigScript.xml AWCERTAUTHTOKEN={{ uem_token }}"'

    - name: Create self-signed Device Services certificate
      win_shell: |
        $existing_cert = dir Cert:\LocalMachine\My\ | Where-Object { $_.Subject -match "uds.{{ domain_name }}" }
        if ($existing_cert.Count -gt 0)
        {
          echo "$($existing_cert[0].Thumbprint):cert already exists"
        }
        else
        {
          $new_cert = New-SelfSignedCertificate -DnsName uds.{{ domain_name }} -CertStoreLocation Cert:\LocalMachine\My\
          echo "$new_cert.Thumbprint:new cert created"
        }
      register: cert_result
      changed_when: "'cert already exists' not in cert_result.stdout"

    - name: Add HTTPS binding to self-signed certificate
      community.windows.win_iis_webbinding:
        name: Default Web Site
        protocol: https
        port: 443
        ssl_flags: 0
        certificate_hash: "{{ cert_result.stdout.split(':') | first }}"
        state: present
